name: Build catalogue-api image

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Image tag'
        required: true
        default: 'latest'
  workflow_run:
    workflows:
    - ecmwf-projects/cads-build-farm/build-images.yml
    types: [requested]

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Setup harbor ca certificate from secret
      run: |
        ls /etc/docker
        sudo mkdir -p /etc/docker/certs.d/"${{ secrets.HARBOR_IP }}"
        echo "${{ secrets.HARBOR_CERT }}" | sudo tee /etc/docker/certs.d/"${{ secrets.HARBOR_IP }}"/ca.crt >/dev/null
    - name: Copy ca cert
      run: |
        sudo cp /etc/docker/certs.d/"${{ secrets.HARBOR_IP }}"/ca.crt /etc/ssl/certs/ca-certificates.crt
    - name: Login to harbor registry
      uses: docker/login-action@v2
      with:
        registry: '${{ secrets.HARBOR_IP }}'
        username: ${{ secrets.HARBOR_USER }}
        password: ${{ secrets.HARBOR_TOKEN }}
    - name: Setup docker context for buildx
      id: buildx-context
      run: docker context create builders || docker context use builders

    - name: Create BuildKit Configuration
      run: |
        cat <<EOF > buildkitd.toml
        [registry."${{ secrets.HARBOR_IP }}"]
          http = false
          insecure = false
          ca=["/etc/ssl/certs/ca-certificates.crt"]
        EOF
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        version: v0.9.1
        endpoint: builders
        buildkitd-flags: --debug
        config: buildkitd.toml

    - name: Checkout cads-deployment repo
      uses: actions/checkout@v3
      with:
        repository: ecmwf-projects/cads-deployment
        token: ${{ secrets.CADS_PAT }}
        path: .

    - name: Checkout cads-catalogue repo
      uses: actions/checkout@v3
      with:
        repository: ecmwf-projects/cads-catalogue
        token: ${{ secrets.CADS_PAT }}
        path: ./docker/cads-catalogue

    - name: Clone cads-forms-json repo
      uses: actions/checkout@v2
      with:
        repository: ecmwf-projects/cads-forms-json
        ref: cds2-test
        token: ${{ secrets.CADS_PAT }}
        path: ./docker/cads-forms-json

    - name: Clone cads-forms-cim-json repo
      uses: actions/checkout@v2
      with:
        repository: ecmwf-projects/cads-forms-cim-json
        ref: main
        token: ${{ secrets.CADS_PAT }}
        path: ./docker/cads-forms-cim-json

    - name: Clone cads-messages repo
      uses: actions/checkout@v2
      with:
        repository: ecmwf-projects/cads-messages
        ref: cds2-test
        token: ${{ secrets.CADS_PAT }}
        path: ./docker/cads-messages

    - name: Clone cads-licences repo
      uses: actions/checkout@v2
      with:
        repository: ecmwf-projects/cads-licences
        ref: cds2-test
        token: ${{ secrets.CADS_PAT }}
        path: ./docker/cads-licences

    - name: Clone cads-common repo
      uses: actions/checkout@v2
      with:
        repository: ecmwf-projects/cads-common
        token: ${{ secrets.CADS_PAT }}
        path: ./docker/cads-common

    - name: Checkout cads-catalogue-api-service repo
      uses: actions/checkout@v3
      with:
        repository: ecmwf-projects/cads-catalogue-api-service
        token: ${{ secrets.CADS_PAT }}
        path: ./docker/cads-catalogue-api-service

    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: docker
        push: true
        tags: ${{ secrets.HARBOR_IP }}/cads-dev-env/catalogue-api:${{ github.event.inputs.image_tag }}
        file: docker/catalogue-api/Dockerfile
